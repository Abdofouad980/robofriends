{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","action.js","constants.js","reportWebVitals.js","reducer.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","onChange","type","placeholder","ErrorBoundry","props","_this","Object","classCallCheck","this","_super","call","state","hasError","error","info","setState","children","Component","Scroll","style","overflowY","border","height","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filterRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","intialStateSearch","intialStateRobots","Logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread2","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","es","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.979f1ae5.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Card = ({id,name,email}) => {\r\n    return(\r\n        <div className=\"tc bg-light-blue dib br3 pa3 ma2 grow bw shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`}/>\r\n           <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                </div>\r\n        </div>\r\n    );\r\n} \r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nconst CardList =({robots})=>{\r\n    // if (true){\r\n    // \tthrow new Error('noooo!')\r\n    // }\r\n    return(\r\n        <div>\r\n            {\r\n            robots.map((user,i) => {\r\n               return( <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n            )})\r\n        }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from \"react\";\r\nconst SearchBox =({searchfield,searchChange}) =>{\r\n    return(\r\n        <div className=\"pa2\">\r\n        <input onChange={searchChange} className=\"pa3 ba b--green bg-lightest-blue\" type='search' placeholder=\"search robots\" />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React , {Component} from 'react';\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);//allow to access error \r\n\t\tthis.state ={ \r\n\t\t\thasError :false\r\n\t\t}\r\n\t}\r\ncomponentDidCatch(error,info){\r\nthis.setState({hasError: true})\r\n}\r\n//this a life cycle hook to catch error and has to parameter error and info\r\nrender(){\r\n\tconst {hasError}=this.state;\r\n\treturn hasError?\r\n\t<h1>Oooops. that is not good </h1>:\r\n\tthis.props.children;\r\n}\r\n}\r\nexport default ErrorBoundry;","import React from \"react\";\r\nconst Scroll =(props) =>{\r\n    return(\r\n    // console.log(props)\r\n    // return props.children\r\n    // return <h1>hi</h1>\r\n    //css:overflow-y\r\n    // jsx:overflowY\r\n    // you must camelCalse for JSX\r\n    <div style={{overflowY:'scroll' ,border:'5px solid black',height:'800px'}}> \r\n    {/*  with double prackets use jsx and single use html and here using html  */}\r\n        {props.children}\r\n    </div>)\r\n    \r\n};\r\nexport default Scroll;","// import logo from './logo.svg';\n// import './index.css';\n// class App extends React.Component{\n//   render() { return(\n//       <div className=\"App\">\n//     <header className=\"App-header\">\n//       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//       <p>\n//         Edit <code>src/App.js</code> and save to reload.\n//       </p>\n//       <a\n//         className=\"App-link\"\n//         href=\"https://reactjs.org\"\n//         target=\"_blank\"\n//         rel=\"noopener noreferrer\"\n//       >\n//         Learn React\n//       </a>\n//     </header>\n//   </div>);}\n// }\n\n\nimport React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport {connect} from 'react-redux';\n// import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundary';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport {setSearchField,requestRobots} from '../action';\nconst mapStateToProps = state =>{\n        return {\n        searchField:state.searchRobots.searchField,\n        isPending:state.requestRobots.isPending,\n        robots:state.requestRobots.robots,\n        error:state.requestRobots.error\n        }\n      }\n      // searchField:state.searchRobots.searchField instead of send searchfield to state throw piece of piece\n        const mapDispatchToProps= (dispatch)=>{\n          return {onSearchChange:(event)=>dispatch(setSearchField(event.target.value)),\n            onRequestRobots:()=>dispatch(requestRobots())\n          }\n        }\nclass App extends Component{\n  // constructor(){\n  //   super()\n  //   this.state=\n  //     {robots: [],\n  //      // searchfield:''\n  //    }\n  //       // console.log('constructor','1');\n  //     }there is no state to get anything if robots or searchfield\n       componentDidMount(){\n        // console.log(this.props.store.getState())\n        //  console.log('check');\n        // fetch('http://jsonplaceholder.typicode.com/users')\n        // .then(response=> {return response.json();}).then(users=>{this.setState({robots:users})})it comes from requests\n        // console.log('compo','2');\n        this.props.onRequestRobots();\n       }\n //  onSearchChange = (event) => {\n //    this.setState({searchfield:event.target.value})\n   \n //  //  console.log(filterRobots);\n // }\n   render() {\n    const {robots,searchField,onSearchChange,isPending}=this.props;\n    const filterRobots= robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n    \n    // console.log('render','3');\n    return isPending?\n    <h1 className='f1 tc'>Loading .....</h1>:\n    ( \n      <div className='tc'>\n           <h1 className='f1'>RoboFriends</h1>\n           <SearchBox searchChange={onSearchChange} />\n           <Scroll>\n           <ErrorBoundry>\n           <CardList robots={filterRobots} />\n           </ErrorBoundry>\n           </Scroll> \n           </div>)\n             }\n   \n    }\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import {REQUEST_ROBOTS_PENDING,REQUEST_ROBOTS_SUCCESS,REQUEST_ROBOTS_FAILED,CHANGE_SEARCH_FIELD} from './constants.js';\r\n\r\nexport const setSearchField =(text)=> {\r\n\t// console.log(text);\r\n\treturn {\r\n\ttype:CHANGE_SEARCH_FIELD,\r\n\tpayload:text}}\r\n//this is an action and is captilize and \r\n//and run in object cuz when error in typing not stop allthings\r\n// remove prackets not return all so must write return \r\n//i want to see text in console.log\r\nexport const requestRobots = ()=>(dispatch)=>{\r\n\tdispatch({type:REQUEST_ROBOTS_PENDING});\r\n\tfetch('http://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(data=> dispatch({type:REQUEST_ROBOTS_SUCCESS,payload:data}))\r\n        .catch(error=> dispatch({type:REQUEST_ROBOTS_FAILED,payload:error}))\r\n}\r\n// dispatch using here to dispatch actions\r\n//cuz action not return as the pervious action \r\n//so make higher order fun return fun and then return action and that what thunk \r\n//want to go throw middleware and show action and show the power of redux","export const CHANGE_SEARCH_FIELD ='CHANGE_SEARCH_FIELD';\r\n//STORE It as variable in const\r\nexport const REQUEST_ROBOTS_PENDING ='REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS ='REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED ='REQUEST_ROBOTS_FAILED';\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {REQUEST_ROBOTS_PENDING,REQUEST_ROBOTS_SUCCESS,REQUEST_ROBOTS_FAILED,CHANGE_SEARCH_FIELD} from './constants.js';\r\nconst intialStateSearch={\r\n\tsearchField:''\r\n}//for reducer must get action what is empty first\r\n//and then make reducer that have state and action comes from action.js type and payload\r\nexport const searchRobots =(state=intialStateSearch,action={}) =>{\r\n\t// console.log(action.type)\r\n\tswitch(action.type){\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\treturn {...state,searchField:action.payload};\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}//go to 3 principles\r\n//we get update action.payload \r\n//and store is initial state and \r\n//new one is{}\r\n// we can make it like {...state,searchField:action.payload} or Object.assign({},state,{searchField:action.payload});\r\n//we prefer switch can make many cases but until this not making any connecting \r\nconst intialStateRobots={\r\n\tisPending:false,\r\n\trobots:[],\r\n\terror:''\r\n}\r\nexport const requestRobots =(state=intialStateRobots,action={}) =>{\r\n\t// console.log(action.type)\r\n\tswitch(action.type){\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\treturn Object.assign({},state,{isPending:true});\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\treturn Object.assign({},state,{robots:action.payload,isPending:false});\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\treturn Object.assign({},state,{error:action.payload,isPending:false});\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}","// import Hello from './Hello';\n// import Card from './Card';\n// import CardList from './CardList';\n// import {robots} from './robots';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,combineReducers} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport {searchRobots,requestRobots} from './reducer';\nimport 'tachyons';\nconst Logger = createLogger();//using createLogger for logging action and for this must use applyMiddleware package\nconst rootReducer = combineReducers({searchRobots,requestRobots}) //combine reducers with prackets\nconst store = createStore(rootReducer,applyMiddleware(thunkMiddleware,Logger))\nReactDOM.render(\n  <React.StrictMode>\n   {/* <Hello greeting={'Hello '+'React Ninja'}/> */}\n  <Provider store={store}> \n  <App/>\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}